public class Euler2 {
    /**
     * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
     * By starting with 1 and 2, the first 10 terms will be:
     * <p>
     * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     * <p>
     * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
     * find the sum of the even-valued terms.
     */
    public static void main(String[] args) {
        int total = 0;
        int prev = 0;
        int fib = 1;
        while(true){
            int fib_before = fib;
            fib = prev + fib;
            prev = fib_before;

            if(fib > 4000000)
                break;

            if (fib %2==0){
                total+=fib;
            }
        }
        System.out.println(total);

        //Recursive fibonacci
        recursiveSolution();
    }

    public static void recursiveSolution(){
        //Because the starting sequence is 1, the starting point has to be 2. 2-1=1, 2-2=0, 1+0 = 1;
        for(int i=2; i<= 100; i++){
            System.out.println(generateFibonacci(i));
        }
    }

    public static int generateFibonacci(int numberOfElements){
        if (numberOfElements <=1) {
            return numberOfElements;
        }else{
            return generateFibonacci(numberOfElements-1) + generateFibonacci(numberOfElements-2);
        }
    }
}
